Modulo profesional: Programación de servicios y procesos.
Equivalencia en créditos ECTS: 5.
Código: 0490.
Resultados de aprendizaje y criterios de evaluación.
1. Desarrolla aplicaciones compuestas por varios procesos reconociendo y
aplicando principios de programación paralela.
Criterios de evaluación:
a) Se han reconocido las características de la programación concurrente y
sus ámbitos de aplicación.
b) Se han identificado las diferencias entre programación paralela y
programación distribuida, sus ventajas e inconvenientes.
c) Se han analizado las características de los procesos y de su ejecución por
el sistema operativo.
d) Se han caracterizado los hilos de ejecución y descrito su relación con los
procesos.
e) Se han utilizado clases para programar aplicaciones que crean
subprocesos.
f) Se han utilizado mecanismos para compartir información con los
subprocesos iniciados.
g) Se han utilizado mecanismos para sincronizar y obtener el valor devuelto
por los subprocesos iniciados.
h) Se han desarrollado aplicaciones que gestionen y utilicen procesos para la
ejecución de varias tareas en paralelo.
i) Se han depurado y documentado las aplicaciones desarrolladas.
2. Desarrolla aplicaciones compuestas por varios hilos de ejecución
analizando y aplicando librerías específicas del lenguaje de programación.
Criterios de evaluación:
a) Se han identificado situaciones en las que resulte útil la utilización de
varios hilos en un programa.
b) Se han reconocido los mecanismos para crear, iniciar y finalizar hilos.
c) Se han programado aplicaciones que implementen varios hilos.
d) Se han identificado los posibles estados de ejecución de un hilo y
programado aplicaciones que los gestionen.
e) Se han utilizado mecanismos para compartir información entre varios hilos
de un mismo proceso.
f) Se han desarrollado programas formados por varios hilos sincronizados
mediante técnicas específicas.
g) Se ha establecido y controlado la prioridad de cada uno de los hilos de
ejecución.
h) Se han depurado y documentado los programas desarrollados.
i) Se ha analizado el contexto de ejecución de los hilos.
j) Se han analizado librerías específicas del lenguaje de programación que
permiten la programacióm multihilo.
k) Se han reconocido los problemas derivados de la compartición de
información entre los hilos de un mismo proceso.
3. Programa mecanismos de comunicación en red empleando sockets y
analizando el escenario de ejecución.
Criterios de evaluación:
a) Se han identificado escenarios que precisan establecer comunicación en
red entre varias aplicaciones.
b) Se han identificado los roles de cliente y de servidor y sus funciones
asociadas.
c) Se han reconocido librerías y mecanismos del lenguaje de programación
que permiten programar aplicaciones en red.
d) Se ha analizado el concepto de socket, sus tipos y características.
e) Se han utilizado sockets para programar una aplicación cliente que se
comunique con un servidor.
f) Se ha desarrollado una aplicación servidor en red y verificado su
funcionamiento.
g) Se han desarrollado aplicaciones que utilizan sockets para intercambiar
h) información.
i) Se han utilizado hilos para posibilitar la comunicación simultánea de varios
clientes con el servidor.
j) Se han caracterizado los modelos de comunicación más usuales en las
arquitecturas de aplicaciones distribuidas.
k) Se han depurado y documentado las aplicaciones desarrolladas.
4. Desarrolla aplicaciones que ofrecen servicios en red, utilizando librerías de
clases y aplicando criterios de eficiencia y disponibilidad.
Criterios de evaluación:
a) Se han identificado diferentes protocolos estándar de comunicación para
la implementación de servicios en red.
b) Se han reconocido las ventajas de la utilización de protocolos estándar
para la comunicación entre aplicaciones y procesos.
c) Se han analizado librerías que permitan implementar servicios en red
utilizando protocolos estándar de comunicación.
d) Se han desarrollado y probado servicios de comunicación en red.
e) Se han utilizado clientes de comunicaciones para verificar el
funcionamiento de los servicios.
f) Se han incorporado mecanismos para posibilitar la comunicación
simultánea de varios clientes con el servicio.
g) Se ha verificado la disponibilidad del servicio.
h) Se han depurado y documentado las aplicaciones desarrolladas.
5. Protege las aplicaciones y los datos definiendo y aplicando criterios de
seguridad en el acceso, almacenamiento y transmisión de la información.
Criterios de evaluación:
a) Se han identificado y aplicado principios y prácticas de programación
segura.
b) Se han analizado las principales técnicas y prácticas criptográficas.
c) Se han definido e implantado políticas de seguridad para limitar y controlar
el acceso de los usuarios a las aplicaciones desarrolladas.
d) Se han utilizado esquemas de seguridad basados en roles.
e) Se han empleado algoritmos criptográficos para proteger el acceso a la
información almacenada.
f) Se han identificado métodos para asegurar la información transmitida.
g) Se han desarrollado aplicaciones que utilicen comunicaciones seguras
para la transmisión de información.
h) Se han depurado y documentado las aplicaciones desarrolladas.
Duración: 40 horas.
Contenidos básicos.
Programación multiproceso:
− Ejecutables. Procesos. Servicios.
− Estados de un proceso. Planificación de procesos.
− Hilos.
− Programación concurrente.
− Programación paralela y distribuida.
− Comunicación entre procesos.
− Gestión de procesos. Herramientas de monitorización.
− Sincronización entre procesos.
− Programación de aplicaciones multiproceso.
Programación multihilo:
− Contexto de ejecución de los hilos. Recursos compartidos.
− Estados de un hilo. Cambios de estado.
− Librerías y clases.
− Gestión de hilos. Prioridades.
− Sincronización de hilos.
− Compartición de información entre hilos. Problemas.
− Programación de aplicaciones multihilo.
Programación de comunicaciones en red:
− Comunicación entre aplicaciones. Modelos.
− Roles cliente y servidor.
− Librerías y clases.
− Sockets. Tipos. Características.
− Creación de sockets.
− Enlazado y establecimiento de conexiones.
− Utilización de sockets para la transmisión y recepción de información.
− Programación de aplicaciones cliente y servidor.
− Utilización de hilos para la implementación de comunicaciones simultáneas
con el servidor.
Generación de servicios en red:
− Protocolos estándar de comunicación en red a nivel de aplicación. Ventajas
de su utilización.
− Servicios web.
− Librerías de clases y componentes.
− Programación de servidores.
− Establecimiento y finalización de conexiones.
− Transmisión de información.
− Implementación de comunicaciones simultáneas.
− Utilización de aplicaciones clientes.
− Monitorización del servicio. Herramientas.
Utilización de técnicas de programación segura:
− Prácticas de programación segura.
− Criptografía de clave pública y clave privada.
− Principales aplicaciones de la criptografía.
− Protocolos criptográficos.
− Política de seguridad. Roles.
− Programación de mecanismos de control de acceso.
− Encriptación de información.
− Protocolos seguros de comunicaciones.
− Programación de aplicaciones con comunicaciones seguras.
Orientaciones pedagógicas.
Este módulo profesional contiene parte de la formación necesaria para
desempeñar la función de desarrollo de aplicaciones seguras en red.
La función de desarrollo de aplicaciones seguras en red incluye aspectos
como:
− La utilización de las capacidades ofrecidas por el sistema operativo para la
gestión de procesos e hilos.
− La programación de aplicaciones compuestas por varios procesos e hilos.
− El desarrollo de aplicaciones con capacidades para comunicarse y ofrecer
servicios a través de una red.
− La utilización de mecanismos de seguridad en el desarrollo de aplicaciones.
Las actividades profesionales asociadas a esta función se aplican en el área
de sistemas y desarrollo de software en el entorno empresarial.
La formación del módulo contribuye a alcanzar los objetivos generales b), e),
i), j), l), n) ñ), t) y w) del ciclo formativo y las competencias profesionales,
personales y sociales b), e), i), j), l), n), ñ), t) y w) del título.
Las líneas de actuación en el proceso de enseñanza-aprendizaje que permiten
alcanzar los objetivos del módulo versarán sobre:
− La gestión de procesos e hilos y los mecanismos de comunicación y
sincronización entre ellos.
− El desarrollo de programas compuestos por varios procesos e hilos.
− La utilización de sockets para la programación de aplicaciones conectadas
en red.
− El desarrollo de aplicaciones que ofrezcan y utilicen servicios estándar de red.
− La aplicación de prácticas de programación segura.
− La aplicación de técnicas criptográficas en la utilización, almacenamiento y
transmisión de información.



